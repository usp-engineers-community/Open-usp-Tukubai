#!/usr/bin/env python
#coding: utf-8
# 
# retu レコードのフィールド数を求める （Open usp Tukubai版）
#
# designed by Nobuaki Tounaka
# written  by Hinata Yanagi
#
# The MIT License
#
# Copyright (C) 2022 Universal Shell Programming Laboratory
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

from __future__ import print_function

_usage = "retu [-f] [<file> ...]"
_version = "Tue Sep  6 08:46:04 JST 2022"
_code = "Open usp Tukubai (LINUX+FREEBSD/PYTHON2.4+/UTF-8)"

import os
import sys

def printUsage():
	print("Usage   :", _usage, file=sys.stderr)
	print("Version :", _version, file=sys.stderr)
	print("         ", _code, file=sys.stderr)
	sys.exit(1)

def die(message):
	print("Error[retu] :", message, file=sys.stderr)
	sys.exit(1)

#
# 入力ファイルオープン
#
def openFile(filename):
	file = None
	if filename == '-':	filename = '/dev/fd/0' # sys.stdinをファイルディスクリプターで表記する
	if Python3(): mode='r'
	else: mode='rU' # Python2ではmodeがrUのときPython3と同様に読み込み時に各種改行記号がLF（\n）に統一される
	if os.path.exists(filename) and not os.path.isdir(filename):
		try:
			file = open(filename,mode)
		except IOError:
			if filename=='/dev/fd/0':
				die("標準入力ファイルをオープンできません。")
			else:
				die("ファイル "+filename+"をオープンできません。")
	elif os.path.isdir(filename):
		pass
	else:
		die("ファイル "+filename+" がありません。")
	return file

def countNormal(filename):
	file = openFile(filename)
	if file == None: return 0

	prev_num = -1
	for line in file:
		tokens = [ t for t in line.rstrip().split(" ") if t != "" ]
		num = len(tokens)
		if num != prev_num:
			print(num)
			prev_num = num
		
	file.close()

def countFile(filename):
	file = openFile(filename)
	if file == None: return 0

	prev_num = -1
	for line in file:
		tokens = [ t for t in line.rstrip().split(" ") if t != "" ]
		num = len(tokens)
		if num != prev_num:
			print(filename,num)
			prev_num = num

	file.close()

# BOMの取得関数
def get_BOM():
	if Python3(): return chr(int("FEFF",16)) # U+FEFFはBOMのUnicode符号位置
	else:         return "\xEF\xBB\xBF" # BOMは「EF BB BF」の3バイト

# Python3か判定する
def Python3():
	if sys.version_info >= (3, 0):
		return True
	else:
		return False

###########################################
# メイン関数
###########################################
if __name__ == '__main__':

	###########################################
	# オプションの処理
	###########################################
	mode = "normal"
	files = []

	# 構文表示
	if len(sys.argv) == 2:
		if sys.argv[1] == '--help' or \
		   sys.argv[1] == '--version':	printUsage()

	argc = len(sys.argv)
	for i in range(1, argc):
		arg = sys.argv[i]
		if arg == "-f":		mode = "file"
		elif arg == "-":	files.append(arg)
		else:			files.append(arg)

	if len(files) == 0:
		files.append("-")

	###########################################
	# 出力
	###########################################
	for f in files:
		if mode == "normal":	countNormal(f)
		else:			countFile(f)
