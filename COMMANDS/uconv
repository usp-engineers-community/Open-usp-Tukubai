#!/usr/bin/env python
#coding: utf-8
#
# uconv: convert an encoding of text (Open usp Tukubai)
# 
# designed by Nobuaki Tounaka
# written  by Hinata Yanagi
# 
# The MIT License
# 
# Copyright (C) 2022 Universal Shell Programming Laboratory
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

from __future__ import print_function
import re
import sys
import codecs

_usage = [ "uconv {-stou,-utos,-etou,-utoe,-ltou,-utol} [<file>]" ]
_version = "Sun Aug 28 13:24:22 JST 2022"
_code = "Open usp Tukubai (LINUX+FREEBSD/PYTHON2.4+/UTF-8)"

def error(msg, *arg):
	print('Error[uconv] :', msg % arg, file=sys.stderr)
	sys.exit(1)

def usage():
	sys.stderr.write("Usage     : "+ _usage[0] + "\n")
	sys.stderr.write("Version   : "+ _version + "\n")
	sys.stderr.write("          : "+ _code + "\n")
	sys.exit(1)

###########################################
#メイン関数
if __name__ == '__main__':
	if len(sys.argv) <= 1 : usage()
	if '--' in sys.argv : usage()

	mappings = {
		'-stou'  : ['shift_jis', 'utf-8'],
		'-utos'  : ['utf-8', 'shift_jis'],
		'-etou'  : ['euc_jp', 'utf-8'],
		'-utoe'  : ['utf-8', 'euc_jp'],
		'-ltou'  : ['iso-8859-1', 'utf-8'],
		'-utol'  : ['utf-8', 'iso-8859-1']
	}

	mapping = mappings[sys.argv[1]]

	if mapping == None:
		sys.stderr.write('Usage: uconv {-stou,-utos,-etou,-utoe,-ltou,-utol} [<file>]\n')

	if len(sys.argv) < 3:
		if sys.version_info >= (3, 0):
			stdin_decoded = codecs.getreader(mapping[0])(sys.stdin.buffer)
		else:
			stdin_decoded = codecs.getreader(mapping[0])(sys.stdin)
	else:
		stdin_decoded = codecs.open(sys.argv[2], 'r', mapping[0])

	try:
		if sys.version_info >= (3, 0):
			sys.stdout.buffer.write(bytes(stdin_decoded.read(), encoding = mapping[1]))
		else:
			sys.stdout.write(stdin_decoded.read().encode(mapping[1]))
	except UnicodeDecodeError:
		error('不正なバイト列が存在します')


	stdin_decoded.close()

	sys.exit(0)
