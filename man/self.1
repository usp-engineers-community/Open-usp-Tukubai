.TH  Tukubai 1 "20 Feb 2023" "usp Tukubai" "Tukubai コマンド マニュアル"

.br
self(1)
.br

.br
【名前】
.br

.br
self\ :\ 指定したフィールドのデータ取り出し
.br

.br
【書式】
.br

.br
Usage\ \ \ :\ self\ <f1>\ <f2>\ ...\ [<file>]
.br
        : self -d <f1> <f2> ... <string>
.br
Version\ :\ Mon\ Feb\ 20\ 01:49:00\ JST\ 2023
.br

.br
【説明】
.br

.br
fileから指定したフィールドのデータだけを取り出して出力する(self=select\ field)。
.br
<file>として-を指定するかまたは省略すると標準入力を使用する。
.br
フィールド指定において0は全フィールドを意味する。
.br
コマンド入力が「self」でパラメータがないときはコマンドの構文を表示して終了する。
.br
-dオプションが指定された場合、引数の文字列に対して処理が適用される。
.br

.br
【例1】
.br

.br
テキストデータの第4フィールドと第2フィールドを取り出して出力する。
.br

.br

  $ cat data
  0000000 浜地______ 50 F 91 59 20 76 54
  0000001 鈴田______ 50 F 46 39 8  5  21
  0000003 杉山______ 26 F 30 50 71 36 30
  0000004 白土______ 40 M 58 71 20 10 6
  0000005 崎村______ 50 F 82 79 16 21 80

  $

.br

  $ self 4 2 data
  F 浜地______
  F 鈴田______
  F 杉山______
  M 白土______
  F 崎村______

  $

.br
【例2】
.br

.br
self(1)はフィールド中の部分を切り出して出力することもできる。処理としてはawk(1)
.br
のsubstr関数と同じ処理となる。
.br

.br
たとえば第1フィールドの4文字目以降を出力するには次のようにコマンドを実行する。
.br

.br

  $ self 1.4 2 data
  0000 浜地______
  0001 鈴田______
  0003 杉山______
  0004 白土______
  0005 崎村______

  $

.br
第2フィールドの1文字目から半角4文字分(全角2文字分)出力する。
.br

.br

  $ self 2.1.4 3 data
  浜地 50
  鈴田 50
  杉山 26
  白土 40
  崎村 50

  $

.br
【例3】
.br

.br
0で行全体を指定できる。
.br

.br

  $ self 0 data
  0000000 浜地______ 50 F 91 59 20 76 54
  0000001 鈴田______ 50 F 46 39 8  5  21
  0000003 杉山______ 26 F 30 50 71 36 30
  0000004 白土______ 40 M 58 71 20 10 6
  0000005 崎村______ 50 F 82 79 16 21 80

  $

.br

  $ self 4 0 data
  F 0000000 浜地______ 50 F 91 59 20 76 54
  F 0000001 鈴田______ 50 F 46 39 8 5 21
  F 0000003 杉山______ 26 F 30 50 71 36 30
  M 0000004 白土______ 40 M 58 71 20 10 6
  F 0000005 崎村______ 50 F 82 79 16 21 80

  $

.br
【例4】
.br

.br
連続したフィールドも記述できる。
.br

.br

  $ self 2/5 data
  浜地______ 50 F 91
  鈴田______ 50 F 46
  杉山______ 26 F 30
  白土______ 40 M 58
  崎村______ 50 F 82

  $

.br
【例5】
.br

.br
NF(現在の行のフィールド数)を使用することができる。
.br

.br

  $ self 1 NF-3 NF data
  0000000 59 54
  0000001 39 21
  0000003 50 30
  0000004 71 6
  0000005 79 80

  $

.br
【例6】
.br

.br
複数の空白があるフィールドを1つの空白にすることができる。
.br

.br

  $ cat data2
  a    b
  c   d e

  $

.br

  $ self 1/NF data2
  a b
  c d e

  $

.br
【例7】
.br

.br
ダイレクトモードを使用して文字列を加工することができる。
.br

.br

  $ self -d 1.1.4 "20070401 12345"
  2007

  $

.br
【例8】
.br

.br
selfの切り出し指定は画面表示長の半角文字分を1として扱う。
.br

.br

  $ echo ｱｲｳｴｵｶｷｸｹｺ | self 1.3.4
  ｳｴｵｶ

  $

.br
【注意】
.br

.br
入力ファイルが改行文字で終了していない場合、つまり行が尻切れになっている場合は
.br
ファイル末尾に改行文字が追加されて完結した行になる。
.br

.br
-d指定がないとき
.br
\ 数字名のファイルを使用してはならない。
.br
\ もし10という名前のファイルが存在しても
.br
\ self\ 1\ 10は標準入力ファイルから第1および第10フィールドを抽出するという動作をする
.br
\ 数字名以外であっても最後のパラメータがフィールド指定形式に見合った文字列のとき
.br
\ それはファイル名ではなくフィールド指定とみなされて入力は標準入力から行なわれる
.br

.br
また、文字列切り出し指定において、切り取りや長さが文字の区切りに一致しないとき
.br
にはエラーとなる。
.br
フィールドの幅より大きい開始位置を指定してもエラーとなる。
.br

.br
【関連項目】
.br

.br
delf(1)
.br

.br
last\ modified:\ Mon\ Feb\ 20\ 01:48:41\ JST\ 2023
.br
Contact\ us:\ uecinfo@usp-lab.com
.br
Copyright\ (c)\ 2012-2023\ Universal\ Shell\ Programming\ Laboratory\ All\ Rights
.br
