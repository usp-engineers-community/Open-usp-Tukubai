.TH  Tukubai 1 "20 Jun 2020" "usp Tukubai" "Tukubai コマンド マニュアル"

.br
loopj(1)
.br

.br
【名前】
.br

.br
loopj\ :\ 複数のテキストファイル全行を連結
.br

.br
【書式】
.br

.br
Usage\ \ \ :\ loopj\ [-d<string>]\ num=<num>\ <file1>\ <file2>\ ..
.br
Version\ :\ Thu\ Dec\ 15\ 13:46:38\ JST\ 2011
.br
Edition\ :\ 1
.br

.br
【説明】
.br

.br
引数で指定した複数のテキストファイルを、第1フィールドからnum=<n>で指定したフィ
.br
ールドまでをキーにしてすべて連結する(loopj=loop\ of\ join)。各ファイルの中でキー
.br
フィールドが一致しない行についてはそれぞれ0でフィールドを補完する。
.br

.br
連結する各ファイルは0バイトより大きく、キーとなるフィールドは必ずユニークかつ昇
.br
順で整列されていることが条件となる。フィールド数がキーフィールド数に満たない場
.br
合エラーとなる。また、<file>が0バイトファイルの場合にもエラーとなる。
.br

.br
【例1】基本的な使い方
.br

.br

  $ cat file1
  0000003 杉山______ A
  0000005 崎村______ B
  0000007 梶川______ C
  0000010 柳本______ D

  $

.br

  $ cat file2
  0000000 50
  0000003 26
  0000004 40
  0000009 68

  $

.br

  $ cat file3
  0000000 F
  0000003 F
  0000004 M
  0000005 F

  $

.br
3つのファイルを連結するには次のようにコマンドを実行する。
.br

.br

  $ loopj num=1 file1 file2 file3
  0000000 0 0 50 F
  0000003 杉山______ A 26 F
  0000004 0 0 40 M
  0000005 崎村______ B 0 F
  0000007 梶川______ C 0 0
  0000009 0 0 68 0
  0000010 柳本______ D 0 0

  $

.br
ファイル名を-にすることで、標準入力ファイルを連結することができる。
.br

.br

  $ cat file2 | loopj num=1 file1 - file3

.br
【例2】-d\ オプション
.br

.br
-dオプションを使用することで補完する文字列を指定することができる。
.br

.br

  $ loopj -d@@@ num=1 file1 file2 file3
  0000000 @@@ @@@ 50 F
  0000003 杉山______ A 26 F
  0000004 @@@ @@@ 40 M
  0000005 崎村______ B @@@ F
  0000007 梶川______ C @@@ @@@
  0000009 @@@ @@@ 68 @@@
  0000010 柳本______ D @@@ @@@

  $

.br
【例3】キーのみを持つファイルの連結
.br

.br
キーのみを持つファイルを連結した場合には値のみ補完が実施される。
.br

.br

  $ cat file1
  0001 1
  0002 2

  $

.br

  $ cat file2
  0001
  0002
  0003
  0004

  $

.br

  $ loopj num=1 file1 file2
  0001 1
  0002 2
  0003 0
  0004 0

  $

.br

  $ loopj num=1 file2 file2
  0001
  0002
  0003
  0004

  $

.br
【注意】
.br

.br
連結するファイルが0バイトの時はエラーになる。
.br

.br

  $ : > data1

  $ cat data2
  a 1
  b 2
  c 3

  $

.br

  $ loopj num=1 data1 data2
  Error[loopj] : 0バイトファイル[1]は連結できません。

  $

.br
上記の例でdata1が、例えば3フィールドあることを保証するには、次のようにコマンド
.br
を実行すれば良い。
.br

.br

  $ [ ! -s data1 ] && echo x 0 0 > data1

  $ loopj num=1 data1 data2 |  awk '$1!~/x/
  a 0 0 1
  b 0 0 2
  c 0 0 3

  $

.br
【関連項目】
.br

.br
join0(1)、join1(1)、join2(1)、loopx(1)、up3(1)、マスタファイル(5)、トランザクシ
.br
ョンファイル(5)
.br

.br
last\ modified:\ Thu\ Aug\ 11\ 13:22:05\ JST\ 2022
.br
Contact\ us:\ uecinfo@usp-lab.com
.br
Copyright\ (c)\ 2012-2022\ Universal\ Shell\ Programming\ Laboratory\ All\ Rights
.br
