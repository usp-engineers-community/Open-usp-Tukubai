.TH  Tukubai 1 "19 Jan 2023" "usp Tukubai" "Tukubai コマンド マニュアル"

.br
1bai
.br

.br
【名前】
.br

.br
1bai\ :\ 前0をとる
.br

.br
【書式】
.br

.br
Usage\ \ \ :\ 1bai\ [-r]\ [<f1>\ <f2>\ ...]\ [<file>]
.br
          1bai -d[r] <string>
.br
          1bai -[r]d <string>
.br
Version\ :\ Thu\ Jan\ 19\ 03:12:32\ JST\ 2023
.br

.br
【説明】
.br

.br
指定したファイルの指定フィールドや指定した文字列の先頭の０を取り除きます。
.br
(小数点以下の後０も削除します)
.br
rオプションをつけると-1倍します。
.br
dオプションをつけると引数で指定した文字列に対する処理をします。
.br
<file>として-を指定するかまたは省略すると標準入力を使用します。
.br
フィールド指定\ <f1>\ <f2>\ ...\ を省略すると全フィールド指定となります。
.br
フィールド指定\ <f1>\ <f2>\ ...\ にひとつでも0があると全フィールド指定となります。
.br
コマンド入力が「1bai\ -r」であったときは標準入力に対して全フィールドを-1倍します。
.br
コマンド入力が「1bai」であったときはコマンドの構文を表示して終了します
.br

.br
【例１】
.br

.br

  $ cat data
  0000000 浜地______ 50 F 91 59 20 76 54
  0000001 鈴田______ 50 F 46 39 8  5  21
  0000003 杉山______ 26 F 30 50 71 36 30
  0000004 白土______ 40 M 58 71 20 10 6
  0000005 崎村______ 20 M 82 79 16 21 80
  0000007 梶川______ 42 F 50 2  33 15 62

.br

  $ 1bai 1 data > data2

  $ cat data2   <- 1フィールド目の頭 "0" を取り去ります。
  0 浜地______ 50 F 91 59 20 76 54
  1 鈴田______ 50 F 46 39 8 5 21
  3 杉山______ 26 F 30 50 71 36 30
  4 白土______ 40 M 58 71 20 10 6
  5 崎村______ 20 M 82 79 16 21 80
  7 梶川______ 42 F 50 2 33 15 62

.br
【例２】
.br

.br
-r\ (reverse)\ オプションをつけると-1倍します。
.br

  $ cat file
  a 1 2 3 4 5
  b 1 2 3 4 5

  $ 1bai -r 2 file
  a -1 2 3 4 5
  b -1 2 3 4 5

  $ 1bai -r 2/4 file
  a -1 -2 -3 4 5
  b -1 -2 -3 4 5

  $ 1bai -r 2 NF-1/NF file
  a -1 2 3 -4 -5
  b -1 2 3 -4 -5

.br
【例３】
.br

.br
up3\ と\ sm2\ を組み合わせて同じキーをもつレコードの引き算を行います。
.br

  $ cat data
  a 5
  b 2

  $ cat data2
  a 2
  b 1

  $ 1bai -r 2 data2 | up3 key=1 data | sm2 1 1 2 2
  a 3
  b 1

.br
【例４】
.br

.br
-d\ オプションはダイレクトモードです。引数に直接編集したい文字列を指定します。
.br

  $ 1bai -d 0123
  123

  $ 1bai -d 0123.400
  123.4

  $ 1bai -d 0123.000
  123

  $ 1bai -d 0
  0

  $ 1bai -d -000123.400
  -123.4

  $ 1bai -d +000123.400
  123.4

  $ 1bai -dr 0123
  -123

.br
【例５】
.br

.br
前０をとることにより、シェルや\ awk\ の\ printf\ 文における８進数への自動置換を無効にします。
.br

  $ num=010\1 \2 \3進数と解釈されてしまう

  $ printf '%04d\n' $num
  0008

  $ printf '%04d\n' $(1bai -d $num)
  0010

.br
【例６】
.br

.br
固定長テキストから変換されたデータは、符号や前０後０がついたものが多く、1bai\ コマンドが役立ちます。
.br

  $ cat file
  a 000123.000 000345.000
  b 000098.450 000100.000

  $ 1bai 2 3 file
  a 123 345
  b 98.45 100

.br
【注意】
.br

.br
実行時パラメータの最後尾が実際に存在するファイルの名前であればそれを入力ファイルとして開く。
.br
このファイル名は「10」のような数字列であってもかまわない。
.br
最後尾が存在するファイル名でないときはそれをフィールドとして処理し、
.br
入力ファイル名は省略されたものとして標準入力（stdin）を使用する。
.br

.br
【コラム】
.br
命名の由来
.br
対象の数字の文字列に１倍を掛けることにより０を取り除くため、1bai\ と命名されています。
.br

.br
last\ modified:\ Sat\ Feb\ \ 4\ 18:01:52\ JST\ 2023
.br
Contact\ us:\ uecinfo@usp-lab.com
.br
Copyright\ (c)\ 2012-2023\ Universal\ Shell\ Programming\ Laboratory\ All\ Rights
.br
