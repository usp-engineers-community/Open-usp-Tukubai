#!/bin/bash
#!/usr/local/bin/bash -xv # コマンド処理系の変更例
#
# test script of dayslash
#
# usage: [<test-path>/]dayslash.test [<command-path> [<python-version>]]
#
#            <test-path>は
#                    「現ディレクトリーからみた」本スクリプトの相対パス
#                    または本スクリプトの完全パス
#                    省略時は現ディレクトリーを仮定する
#            <command-path>は
#                    「本スクリプトのディレクトリーからみた」test対象コマンドの相対パス
#                    またはtest対象コマンドの完全パス
#                    省略時は本スクリプトと同じディレクトリーを仮定する
#                    値があるときまたは空値（""）で省略を示したときはあとにつづく<python-version>を指定できる
#            <python-version>は
#                    使用するpython処理系のversion（minor versionまで指定可）を指定する
#                    （例 python2 python2.6 phthon3 python3.4など）
#                    単にpythonとしたときは現実行環境下でのdefault versionのpythonを使用する
#                    文字列"python"は大文字/小文字の区別をしない
#                    省略時はpythonを仮定する
name=dayslash # test対象コマンドの名前
testpath=$(dirname $0) # 本スクリプト実行コマンドの先頭部($0)から本スクリプトのディレトリー名をとりだす
cd $testpath # 本スクリプトのあるディレクトリーへ移動
if test "$2" = ""; # <python-version>($2)がなければ
	then pythonversion="python" # default versionのpythonとする
	else pythonversion="$2" # <python-version>($2)があれば指定versionのpythonとする
fi
if test "$1" = ""; # <command-path>($1)がなければ
	then commandpath="." # test対象コマンドは現ディレクトリーにある
	else commandpath="$1" # <command-path>($1)があればtest対象コマンドは指定のディレクトリーにある
fi
com="${pythonversion} ${commandpath}/${name}" # python処理系によるtest対象コマンド実行の先頭部
tmp=/tmp/$$

ERROR_CHECK(){
	[ "$(echo ${PIPESTATUS[@]} | tr -d ' 0')" = "" ] && return
	echo $1
	echo "${pythonversion} ${name}" NG
	rm -f $tmp-*
	exit 1
}

BOMandEOLvariation(){	# BOM無しLF改行ファイル（$1）からBOM付きCRLF改行ファイル（$2）とBOM付きCR改行ファイル（$3）を生成する
	 [ $# -eq 3 ]; ERROR_CHECK "TESTスクリプト内のBOMandEOLvariation()でファイル指定が不正"
	awk '{print '\xEF\xBB\xBF' $0}' $1 > $2 # $1の先頭にBOMを付け全行をCRLFで連接し終端にCRを付加して$2に出力
	awk 'BEGIN {ORS = "\r"}  {print '\xEF\xBB\xBF' $0}' $1 > $3 # $1の先頭にBOMを付け全行をCRで連接して$3に出力し$3最終行のLFをCRに変換
}

###########################################
#TEST1: 日付

cat << FIN > $tmp-in
20120101
20130201
123456
hoge
-
20131231
FIN

cat << FIN > $tmp-ans
2012/1/1
2013/2/1
123456
hoge
-
2013/12/31
FIN

${com} yyyy/m/d 1 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST1-1 error"

${com} --output yyyy/m/d 1 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST1-2 error"

cat << FIN > $tmp-ans
2012/01/01
2013/02/01
123456
hoge
-
2013/12/31
FIN

cat $tmp-in		|
${com} yyyy/mm/dd 1 - > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST1-3 error"

cat << FIN > $tmp-ans
1/1
2/1
123456
hoge
-
12/31
FIN

cat $tmp-in	|
${com} m/d 1 - > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST1-4 error"

cat << FIN > $tmp-ans
01月2012年
02月2013年
123456
hoge
-
12月2013年
FIN

cat $tmp-in		|
${com} mm月yyyy年 1 - > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST1-5 error"

###########################################
#TEST2: 時刻

cat << FIN > $tmp-in
121212
020212
hoge
-
20131231
FIN

cat << FIN > $tmp-ans
12時12分12秒
02時02分12秒
hoge
-
20131231
FIN

cat $tmp-in		|
${com} HH時MM分SS秒 1 > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST2-1 error"

cat << FIN > $tmp-ans
12:12
02:02
hoge
-
20131231
FIN

cat $tmp-in		|
${com} HH:MM 1 > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST2-2 error"

###########################################
#TEST3: 年月日時分秒

cat << FIN > $tmp-in
19430103121212
20011231020212
hoge
-
20131231
121212
FIN

cat << FIN > $tmp-ans
1943年01月03日12時12分12秒
2001年12月31日02時02分12秒
hoge
-
20131231
121212
FIN

cat $tmp-in		|
${com} yyyy年mm月dd日HH時MM分SS秒 1 > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST3-1 error"

#----------------------------------

cat << FIN > $tmp-ans
1943/1/3_12:12
2001/12/31_02:02
hoge
-
20131231
121212
FIN

cat $tmp-in		|
${com} yyyy/m/d_HH:MM 1 > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST3-2 error"

#----------------------------------

cat << FIN > $tmp-ans
1943/1/3
2001/12/31
hoge
-
2013/12/31
121212
FIN

cat $tmp-in		|
${com} yyyy/m/d 1 > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST3-3 error"

###########################################
#TEST4: 複数フィールド

cat << FIN > $tmp-in
あいう 20120101 えお
かきく 20130201 けこ
さしす 123456 せそ
たちつ hoge てと
なにぬ - ねの
はひふ 20131231 へほ
FIN

cat << FIN > $tmp-ans
あいう 2012/1/1 えお
かきく 2013/2/1 けこ
さしす 123456 せそ
たちつ hoge てと
なにぬ - ねの
はひふ 2013/12/31 へほ
FIN

${com} yyyy/m/d 2 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST4-1 error"

#----------------------------------

cat << FIN > $tmp-ans
あいう 2012/1/1
かきく 2013/2/1
さしす 123456
たちつ hoge
なにぬ -
はひふ 2013/12/31
FIN

awk '{print $1,$2}' $tmp-in	|
${com} yyyy/m/d 2 > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST4-2 error"

###########################################
#TEST5: リバースモード

cat << FIN > $tmp-in
あいう 2012年1月1日 えお
かきく 2013年2月1日 けこ
FIN

cat << FIN > $tmp-ans
あいう 20120101 えお
かきく 20130201 けこ
FIN

${com} -r yyyy年m月d日 2 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST5-1 error"

#----------------------------------

cat << FIN > $tmp-in
あいう 2時1分
かきく 13時12分
FIN

cat << FIN > $tmp-ans
あいう 020100
かきく 131200
FIN

${com} -r H時M分 2 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST5-2 error"

#----------------------------------

cat << FIN > $tmp-in
あいう 1234年12月3日2時1分12秒
かきく 2001年4月31日13時12分3秒
FIN

cat << FIN > $tmp-ans
あいう 12341203020112
かきく 20010431131203
FIN

${com} -r yyyy年m月d日H時M分S秒 2 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST5-3 error"

###########################################
#TEST6
#TEST1の拡大版
# BOM付きCRLFとBOM付きCRの試験

cat << FIN > $tmp-in
20120101
20130201
123456
hoge
-
20131231
FIN

cat << FIN > $tmp-ans
2012/1/1
2013/2/1
123456
hoge
-
2013/12/31
FIN

# 入力用tmpファイルからBOM付きCRLFとBOM付きCRの各ファイルを作る
BOMandEOLvariation $tmp-in $tmp-inBOMCRLF $tmp-inBOMCR

# BOM付きCRLF
${com} yyyy/m/d 1 $tmp-inBOMCRLF > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST6-1 error"

# BOM付きCR
${com} yyyy/m/d 1 $tmp-inBOMCR > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST6-2 error"

# pipe接続1

# BOM付きCRLF
cat $tmp-inBOMCRLF | ${com} yyyy/m/d 1 - > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST6-3 error"

# BOM付きCR
cat $tmp-inBOMCR | ${com} yyyy/m/d 1 - > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST6-4 error"

# pipe接続2

cat << FIN > $tmp-ans
2012/01/01
2013/02/01
123456
hoge
-
2013/12/31
FIN

# BOM付きCRLF
cat $tmp-inBOMCRLF		|
${com} yyyy/mm/dd 1 - > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST6-5 error"

# BOM付きCR
cat $tmp-inBOMCR		|
${com} yyyy/mm/dd 1 - > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST6-6 error"

# pipe接続3

cat << FIN > $tmp-ans
1/1
2/1
123456
hoge
-
12/31
FIN

# BOM付きCRLF
cat $tmp-inBOMCRLF	|
${com} m/d 1 - > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST6-7 error"

# BOM付きCR
cat $tmp-inBOMCR	|
${com} m/d 1 - > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST6-8 error"

# pipe接続4

cat << FIN > $tmp-ans
01月2012年
02月2013年
123456
hoge
-
12月2013年
FIN

# BOM付きCRLF
cat $tmp-inBOMCRLF		|
${com} mm月yyyy年 1 - > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST6-9 error"

# BOM付きCR
cat $tmp-inBOMCR		|
${com} mm月yyyy年 1 - > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST6-10 error"

###########################################
#TEST7: 年月日時分秒
#TEST3の拡大版 日付時刻にU+xxxx超の4バイト符号位置を含む文字（IVS）を使用する
#	「年󠄁月󠄂日󠄂時分秒」のうち年󠄁月󠄂日󠄂分はそれぞれ
#		年󠄂(U+5E74;U+E0102)
#		月󠄃(U+6708;U+E0103)
#		日󠄂(U+65E5;U+E0102)
#		分󠄃(U+5206;U+E0103)
#		のIVSを使用し異体字選択子の「U+Exxxx」は4バイトを使用する
#	通常の異体字選択子を含まないUCS文字（Unicode文字）は
#		年(U+5E74)
#		月(U+6708)
#		日(U+65E5)
#		分(U+5206)

# 年月日時分秒をUCSで

cat << FIN > $tmp-in
19430103121212
20011231020212
hoge
-
20131231
121212
FIN

cat << FIN > $tmp-ans
1943年󠄂01月󠄃03日󠄂12時12分󠄃12秒
2001年󠄂12月󠄃31日󠄂02時02分󠄃12秒
hoge
-
20131231
121212
FIN

cat $tmp-in		|
${com} yyyy年󠄂mm月󠄃dd日󠄂HH時MM分󠄃SS秒 1 > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST7-1 error"

# 年月日時分秒をUCSで -rオプション

cat << FIN > $tmp-in
1943年01月03日12時12分12秒
2001年12月31日02時02分12秒
hoge
-
20131231
121212
FIN

cat << FIN > $tmp-ans
19430103121212
20011231020212
hoge
-
20131231
121212
FIN

cat $tmp-in		|
${com} -r yyyy年mm月dd日HH時MM分SS秒 1 > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST7-2-r（年月日時分秒をUCSで） error"

# 年月日時分秒をIVSで -rオプション

cat << FIN > $tmp-in
1943年󠄂01月󠄃03日󠄂12時12分󠄃12秒
2001年󠄂12月󠄃31日󠄂02時02分󠄃12秒
hoge
-
20131231
121212
FIN

cat << FIN > $tmp-ans
19430103121212
20011231020212
hoge
-
20131231
121212
FIN

cat $tmp-in		|
${com} -r yyyy年󠄂mm月󠄃dd日󠄂HH時MM分󠄃SS秒 1 > $tmp-out
diff $tmp-ans $tmp-out ; ERROR_CHECK "TEST7-3-r（年月日時分秒をIVSで） error"


rm -f $tmp-*
echo "${pythonversion} ${name}" OK
exit 0
