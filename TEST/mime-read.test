#!/bin/bash
#!/usr/local/bin/bash -xv # コマンド処理系の変更例
#
# test script of mime-read
#
# usage: [<test-path>/]mime-read.test [<command-path> [<python-version>]]
#
#            <test-path>は
#                    「現ディレクトリーからみた」本スクリプトの相対パス
#                    または本スクリプトの完全パス
#                    省略時は現ディレクトリーを仮定する
#            <command-path>は
#                    「本スクリプトのディレクトリーからみた」test対象コマンドの相対パス
#                    またはtest対象コマンドの完全パス
#                    省略時は本スクリプトと同じディレクトリーを仮定する
#                    値があるときまたは空値（""）で省略を示したときはあとにつづく<python-version>を指定できる
#            <python-version>は
#                    使用するpython処理系のversion（minor versionまで指定可）を指定する
#                    （例 python2 python2.6 phthon3 python3.4など）
#                    単にpythonとしたときは現実行環境下でのdefault versionのpythonを使用する
#                    文字列"python"は大文字/小文字の区別をしない
#                    省略時はpythonを仮定する
name=mime-read # test対象コマンドの名前
testpath=$(dirname $0) # 本スクリプト実行コマンドの先頭部($0)から本スクリプトのディレトリー名をとりだす
cd $testpath # 本スクリプトのあるディレクトリーへ移動
if test "$2" = ""; # <python-version>($2)がなければ
	then pythonversion="python" # default versionのpythonとする
	else pythonversion="$2" # <python-version>($2)があれば指定versionのpythonとする
fi
if test "$1" = ""; # <command-path>($1)がなければ
	then commandpath="." # test対象コマンドは現ディレクトリーにある
	else commandpath="$1" # <command-path>($1)があればtest対象コマンドは指定のディレクトリーにある
fi
com="${pythonversion} ${commandpath}/${name}" # python処理系によるtest対象コマンド実行の先頭部
tmp=/tmp/$$

ERROR_CHECK(){
	[ "$(echo ${PIPESTATUS[@]} | tr -d ' 0')" = "" ] && return
	echo $1
	echo "${pythonversion} ${name}" NG
	rm -f $tmp-*
	exit 1
}

BOMandEOLvariation(){	# BOM無しLF改行ファイル（$1）からBOM付きCRLF改行ファイル（$2）とBOM付きCR改行ファイル（$3）を生成する
	 [ $# -eq 3 ]; ERROR_CHECK "TESTスクリプト内のBOMandEOLvariation()でファイル指定が不正"
	awk '{print '\xEF\xBB\xBF' $0}' $1 > $2 # $1の先頭にBOMを付け全行をCRLFで連接し終端にCRを付加して$2に出力
	awk 'BEGIN {ORS = "\r"}  {print '\xEF\xBB\xBF' $0}' $1 > $3 # $1の先頭にBOMを付け全行をCRで連接して$3に出力し$3最終行のLFをCRに変換
}

###########################################
#TEST1

cat << FIN > $tmp-in
Return-Path: zzzz@gmail.com
Received: by conbox033-v id 53e9a3fa685e2e;
	Tue, 12 Aug 2014 14:19:54 +0900
Received: from conmx123.nifty.com (conmx123.nifty.com [169.15.161.177])
	by conbox045-v.nifty.com (Postfix) with ESMTP id 3C4A85C0B4
	for <xxxx.yyyy@nifty.ne.jp>; Tue, 12 Aug 2014 14:19:54 +0900 (JST)
Authentication-Results: nifty.com; spf=pass smtp.mailfrom=zzzz@gmail.com; sender-id=pass
	 header.Sender=zzzz@gmail.com; dkim=pass header.i=@gmail.com
Received: from mail-la2-f65.google.com (mail-la2-f65.google.com [212.74.232.35])
	by conmx123.nifty.com  with ESMTP id s7C5JqCi017885
	for <xxxx.yyyy@nifty.ne.jp>; Tue, 12 Aug 2014 14:19:52 +0900
X-Nifty-SrcIP: [212.74.232.35]
Received: by mail-la2-f65.google.com with SMTP id pn19so7485082lab.10
        for <xxxx.yyyy@nifty.ne.jp>; Mon, 11 Aug 2014 22:19:51 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.152.205.100 with SMTP id lf4mr1891686lac.8.1407820791395;
 Mon, 11 Aug 2014 22:19:51 -0700 (PDT)
Sender: zzzz@gmail.com
Received: by 10.112.120.236 with HTTP; Mon, 11 Aug 2014 22:19:51 -0700 (PDT)
Date: Tue, 12 Aug 2014 14:19:51 +0900
X-Google-Sender-Auth: S3Ec6AhtmnJ8wMGWpZjrQ0CveV0
Message-ID: <CABKUWYNG8Z7RdETqi=FsfYJGmnHxKoyzXxFgHedHezxcDLU=ew@mail.gmail.com>
Subject: =?UTF-8?B?44GT44KT44Gr44Gh44GvIOa1puWztuiKseWtkOOBp+OBmQ==?=
From: =?UTF-8?B?5rWm5bO26Iqx5a2Q?= <zzzz@usp-lab.com>
To: =?UTF-8?B?5bGx55Sw5aSq6YOO?= <xxxx.yyyy@nifty.ne.jp>
Cc: Abc Def <a-def@usp-lab.com>
Content-Type: multipart/mixed;
		boundary=001a11349d262dd5d6050067d2e9

--001a11349d262dd5d6050067d2e9
Content-Type: multipart/alternative;
		boundary="001a11349d262dd5d2050067d2e7"

--001a11349d262dd5d2050067d2e7
Content-Type: text/plain; charset=UTF-8;
		name=test
Content-Transfer-Encoding: base64

44GT44KT44Gr44Gh44Gv44CC5rWm5bO26Iqx5a2Q44Gn44GZ44CC44GN44KH44GG44Gv44KI44GE44GK5aSp5rCX44Gn44GZ44CC
--001a11349d262dd5d2050067d2e7
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: base64

PGRpdj7jgZPjgpPjgavjgaHjga/jgILmtabls7boirHlrZDjgafjgZnjgILjgY3jgofjgYbjga/jgojjgYTjgYrlpKnmsJfjgafjgZnjgII8L2Rpdj4=
--001a11349d262dd5d2050067d2e7--
--001a11349d262dd5d6050067d2e9
Content-Type: application/zip;
		name="20140812.zip"
Content-Disposition: attachment; filename="20140812.zip"
Content-Transfer-Encoding: binary
X-Attachment-Id: t_soek38j65

abc def--001a11349d262dd5d6050067d2e9--
FIN

cat << FIN > $tmp-ans
44GT44KT44Gr44Gh44Gv44CC5rWm5bO26Iqx5a2Q44Gn44GZ44CC44GN44KH44GG44Gv44KI44GE44GK5aSp5rCX44Gn44GZ44CC
FIN

${com} test $tmp-in > $tmp-out
diff $tmp-ans $tmp-out

###########################################
#TEST2

cat << FIN > $tmp-ans
3 name=test
5 name=20140812.zip
5 filename=20140812.zip
FIN

${com}  -v $tmp-in > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST2 error"

###########################################
#TEST3
#TEST1の拡大版
# BOM付きCRLFとBOM付きCRの試験

# 入力用tmpファイルからBOM付きCRLFとBOM付きCRの各ファイルを作る
BOMandEOLvariation $tmp-in $tmp-inBOMCRLF $tmp-inBOMCR

cat << FIN > $tmp-ans
44GT44KT44Gr44Gh44Gv44CC5rWm5bO26Iqx5a2Q44Gn44GZ44CC44GN44KH44GG44Gv44KI44GE44GK5aSp5rCX44Gn44GZ44CC
FIN

# BOM付きCRLF
${com} test $tmp-inBOMCRLF > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST3-1 error"

# BOM付きCR
${com} test $tmp-inBOMCR > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST3-2 error"

# pipe接続

# BOM付きCRLF
cat $tmp-inBOMCRLF | ${com} test - > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST3-3 error"

# BOM付きCR
cat $tmp-inBOMCR | ${com} test - > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST3-4 error"

###########################################
rm -f $tmp-*
echo "${pythonversion} ${name}" OK
exit 0
