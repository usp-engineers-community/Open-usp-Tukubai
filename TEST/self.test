#!/bin/bash
#!/usr/local/bin/bash -xv # コマンド処理系の変更例
#
# test script of self
#
# usage: [<test-path>/]self.test [<command-path> [<python-version>]]
#
#            <test-path>は
#                    「現ディレクトリーからみた」本スクリプトの相対パス
#                    または本スクリプトの完全パス
#                    省略時は現ディレクトリーを仮定する
#            <command-path>は
#                    「本スクリプトのディレクトリーからみた」test対象コマンドの相対パス
#                    またはtest対象コマンドの完全パス
#                    省略時は本スクリプトと同じディレクトリーを仮定する
#                    値があるときまたは空値（""）で省略を示したときはあとにつづく<python-version>を指定できる
#            <python-version>は
#                    使用するpython処理系のversion（minor versionまで指定可）を指定する
#                    （例 python2 python2.6 phthon3 python3.4など）
#                    単にpythonとしたときは現実行環境下でのdefault versionのpythonを使用する
#                    文字列"python"は大文字/小文字の区別をしない
#                    省略時はpythonを仮定する
name=self # test対象コマンドの名前
testpath=$(dirname $0) # 本スクリプト実行コマンドの先頭部($0)から本スクリプトのディレトリー名をとりだす
cd $testpath # 本スクリプトのあるディレクトリーへ移動
if test "$2" = ""; # <python-version>($2)がなければ
	then pythonversion="python" # default versionのpythonとする
	else pythonversion="$2" # <python-version>($2)があれば指定versionのpythonとする
fi
if test "$1" = ""; # <command-path>($1)がなければ
	then commandpath="." # test対象コマンドは現ディレクトリーにある
	else commandpath="$1" # <command-path>($1)があればtest対象コマンドは指定のディレクトリーにある
fi
com="${pythonversion} ${commandpath}/${name}" # python処理系によるtest対象コマンド実行の先頭部
tmp=/tmp/$$

ERROR_CHECK(){
	[ "$(echo ${PIPESTATUS[@]} | tr -d ' 0')" = "" ] && return
	echo $1
	echo "${pythonversion} ${name}" NG
	rm -f $tmp-*
	exit 1
}

BOMandEOLvariation(){	# BOM無しLF改行ファイル（$1）からBOM付きCRLF改行ファイル（$2）とBOM付きCR改行ファイル（$3）を生成する
	 [ $# -eq 3 ]; ERROR_CHECK "TESTスクリプト内のBOMandEOLvariation()でファイル指定が不正"
	awk '{print '\xEF\xBB\xBF' $0}' $1 > $2 # $1の先頭にBOMを付け全行をCRLFで連接し終端にCRを付加して$2に出力
	awk 'BEGIN {ORS = "\r"}  {print '\xEF\xBB\xBF' $0}' $1 > $3 # $1の先頭にBOMを付け全行をCRで連接して$3に出力し$3最終行のLFをCRに変換
}

###########################################
#TEST1

cat << FIN > $tmp-in
0000000 浜地______ 50 F 91 59 20 76 54
0000001 鈴田______ 50 F 46 39 8  5  21
0000003 江頭______ 26 F 30 50 71 36 30
0000004 白土______ 40 M 58 71 20 10 6
0000005 崎村______ 50 F 82 79 16 21 80
FIN

cat << FIN > $tmp-ans
浜地______ F
鈴田______ F
江頭______ F
白土______ M
崎村______ F
FIN

${com} 2 4 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST1 error"

###########################################
#TEST2

cat << FIN > $tmp-ans
0000 浜地______
0001 鈴田______
0003 江頭______
0004 白土______
0005 崎村______
FIN

${com} 1.4 2 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST2 error"

###########################################
#TEST3

cat << FIN > $tmp-ans
浜地 50
鈴田 50
江頭 26
白土 40
崎村 50
FIN

${com} 2.1.4 3 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST3 error"

###########################################
#TEST4

cat << FIN > $tmp-ans
0000000 浜地______ 50 F 91 59 20 76 54
0000001 鈴田______ 50 F 46 39 8 5 21
0000003 江頭______ 26 F 30 50 71 36 30
0000004 白土______ 40 M 58 71 20 10 6
0000005 崎村______ 50 F 82 79 16 21 80
FIN

${com} 0 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST4 error"

###########################################
#TEST5

cat << FIN > $tmp-ans
F 0000000 浜地______ 50 F 91 59 20 76 54
F 0000001 鈴田______ 50 F 46 39 8 5 21
F 0000003 江頭______ 26 F 30 50 71 36 30
M 0000004 白土______ 40 M 58 71 20 10 6
F 0000005 崎村______ 50 F 82 79 16 21 80
FIN

${com} 4 0 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST5 error"

###########################################
#TEST6

cat << FIN > $tmp-ans
浜地______ 50 F 91
鈴田______ 50 F 46
江頭______ 26 F 30
白土______ 40 M 58
崎村______ 50 F 82
FIN

${com} 2/5 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST6 error"

###########################################
#TEST7

cat << FIN > $tmp-in
0000000 浜地______ 50 F 91 59 20 76 54
0000001 鈴田______ 50 F 46 39 8  5  21
0000003 江頭______ 26 F 30 50 71 36 30
0000004 白土______ 40 M 58 71 20 10 6
0000005 崎村______ 50 F 82 79 16 21 80
FIN

cat << FIN > $tmp-ans
0000000 59 54
0000001 39 21
0000003 50 30
0000004 71 6
0000005 79 80
FIN

${com} 1 NF-3 NF $tmp-in > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST7-1 error"

###########################################
#TEST7-2

cat << FIN > $tmp-ans
0000000 59 20 76 54
0000001 39 8 5 21
0000003 50 71 36 30
0000004 71 20 10 6
0000005 79 16 21 80
FIN

${com} 1 NF-3/NF $tmp-in > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST7-2 error"

############################################
#TEST8
# NF should be static on the business command.
# This test is obsolete.
#
#cat << FIN > $tmp-in
#   a    b  
#c   d e
#FIN
#
#cat << FIN > $tmp-ans
#a b
#c d e
#FIN
#
#${com} 1/NF $tmp-in > $tmp-out
#diff $tmp-ans $tmp-out
#[ $? -eq 0 ] ; ERROR_CHECK "TEST8 error"
#
###########################################
#TEST9

cat << FIN > $tmp-ans
2007
FIN

${com} -d 1.1.4 "20070401 12345" > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST9 error"

###########################################
#TEST10

cat << FIN > $tmp-ans
ｳｴｵｶ
FIN

echo ｱｲｳｴｵｶｷｸｹｵ | ${com} 1.3.4 > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST10 error"

###########################################
#TEST11
# 「Error[self] : 部分文字列の開始位置が全角文字の内部になります。」でerrorとなる

# TEST11はエラーで終了するように設定されている

echo ＵＳＰ研究所 | ${com} 1.2.4 > $tmp-out 2> /dev/null
[ $? -eq 1 ] ; ERROR_CHECK "TEST11 error"

###########################################
#TEST12
# 「Error[self] : 部分文字列の開始位置が後ろすぎます。」でerrorとなる

# TEST12はエラーで終了するように設定されている

echo ＵＳＰ研究所 | ${com} 1.20 > $tmp-out 2> /dev/null
[ $? -eq 1 ] ; ERROR_CHECK "TEST12 error"

###########################################
#TEST13
# 「Error[self] : 部分文字列の開始位置が全角文字の内部になります。」でerrorとなる

# TEST13はエラーで終了するように設定されている

echo ＵＳＰ研究所 | ${com} 1.2 > $tmp-out 2> /dev/null
[ $? -eq 1 ] ; ERROR_CHECK "TEST13 error"

###########################################
#TEST14
# 「Error[self] : 部分文字列の開始位置が後ろすぎます。」でerrorとなる

# TEST14はエラーで終了するように設定されている

echo 123 | ${com} 1.4 > $tmp-out 2> /dev/null
[ $? -eq 1 ] ; ERROR_CHECK "TEST14 error"

###########################################
#TEST15

cat << FIN > $tmp-ans
1い2
FIN

echo あ1い2 | ${com} 1.3 > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST15 error"

###########################################
#TEST16 relative path

cat << FIN > ./tmp.$$
1 2 3 4
FIN

cat << FIN > $tmp-ans
4
FIN

${com} 4 ./tmp.$$ > $tmp-out
rm -f ./tmp.$$

diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST16 error"

###########################################
#TEST17 NF.1.1

cat << FIN > $tmp-in
1 2 3 4567
FIN

cat << FIN > $tmp-ans
67
FIN

${com} NF.3.2 $tmp-in > $tmp-out

diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST17-1 error"

${com} NF.3.2 < $tmp-in > $tmp-out

diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST17-2 error"

###########################################
#TEST18 全角をデリミタにしない

cat << FIN > $tmp-in
1　2
FIN

cat << FIN > $tmp-ans
1　2
FIN

${com} 1 < $tmp-in > $tmp-out

diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST18 error"

###########################################
#TEST19
# 代用対/結合文字列/IVS/SVSの処理検査 ファイルからの読み込み

cat << FIN > $tmp-in
0000000 ______吉田 50 F 91 59 20 76 54 #吉(U+5409)
0000001 ______𠮷田 50 F 46 39 8  5  21 #𠮷(U+20BB7)代用対では𠮷(U+D842-U+DFB7)
0000003 ______今川 26 F 30 50 71 36 30 #今(U+4ECA)
0000004 ______𫝆川 40 M 58 71 20 10 6 #𫝆(U+2B746)代用対では𫝆(U+D86D-U+DF46)
0000005 ______𫝆󠄁川 40 F 82 79 16 21 80 #IVSの例で𫝆󠄁(U+2B746;U+E0101)代用対では𫝆󠄁(U+D86D-U+DF46;U+DB40-U+DD01)
0000006 ______渡邊 50 F 33 56 27 40 72 #邊(U+908A)
0000007 ______渡邊󠄊 36 F 51 30 15 22 81 #IVSの例で邊󠄊(U+908A;U+E010A)代用対では邊󠄊(U+908A;U+DB40-U+DD0A)
0000008 ______渡邊󠄋 62 F 72 39 26 18 55 #IVSの例で邊󠄋(U+908A;U+E010B)代用対では邊󠄋(U+908A;U+DB40-U+DD0B)
0000009 ______渡邊󠄌 52 F 33 48 33 33 25 #IVSの例で邊󠄌(U+908A;U+E010C)代用対では邊󠄌(U+908A;U+DB40-U+DD0C)
0000010 ______神山 38 F 64 67 40 21 36 #神(U+795E)
0000011 ______神︀山 25 F 45 36 5 16 72 #SVSの例で神︀(U+795E;U+FE00)
0000012 ______羽田 18 F 76 75 22 32 25 #羽(U+7FBD)
0000013 ______羽︀田 53 F 47 64 43 7 2 #SVSの例で羽︀(U+7FBD;U+FE00)
0000014 か゚き゚く゚け゚こ゚ 45 F 88 43 9 37 62 #結合文字列の例でか゚(U+304B;U+309A)き゚(U+304D;U+309A)く゚(U+304F;U+309A)け゚(U+3051;U+309A)こ゚(U+3053;U+309A)
FIN

# 文字の正しい表示には適切なfontの使用が求められる
# Unicode符号位置を「字(U+xxxx)」の形式で表現する（符号位置が第2面のときは「字(U+xxxxx)」）
# 代用対は「字(U+xxxx-U+yyyy)」の形式で表現する
# 結合文字列/IVS/SVSは「字(U+xxxx;U+yyyy)」の形式で表現する

cat << FIN > $tmp-ans
吉田 F
𠮷田 F
今川 F
𫝆川 M
𫝆󠄁川 F
渡邊 F
渡邊󠄊 F
渡邊󠄋 F
渡邊󠄌 F
神山 F
神︀山 F
羽田 F
羽︀田 F
け゚こ゚ F
FIN

${com} 2.7.4 4 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST19 error"

###########################################
#TEST20
# 代用対/結合文字列/IVS/SVSの処理検査 -d指定による

cat << FIN > $tmp-ans
邊󠄊𠀋 か゚123
FIN

${com} -d 1.3.4 2.1.5 "神︀邊󠄊𠀋一 か゚12345" > $tmp-out

# 「神︀」はSVSの例で神︀(U+795E;U+FE00)
# 「邊󠄊」はIVSの例で邊󠄊(U+908A;U+E010A)代用対では邊󠄊(U+908A;U+DB40-U+DD0A)
# 「𠀋」は𠀋(U+2000B)代用対では𠀋(U+D840-U+DC0B)
# 「か゚」は結合文字列の例でか゚(U+304B;U+309A)

diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST20 error"

###########################################
#TEST21
#TEST1の拡大版（指定フィールドはTEST1の「2,4」から「1,2,4」に変更して行頭のBOMの影響をみる
# BOM付きCRLFとBOM付きCRの試験

cat << FIN > $tmp-in
0000000 浜地______ 50 F 91 59 20 76 54
0000001 鈴田______ 50 F 46 39 8  5  21
0000003 江頭______ 26 F 30 50 71 36 30
0000004 白土______ 40 M 58 71 20 10 6
0000005 崎村______ 50 F 82 79 16 21 80
FIN

cat << FIN > $tmp-ans
0000000 浜地______ F
0000001 鈴田______ F
0000003 江頭______ F
0000004 白土______ M
0000005 崎村______ F
FIN

# 入力用tmpファイルからBOM付きCRLFとBOM付きCRの各ファイルを作る
BOMandEOLvariation $tmp-in $tmp-inBOMCRLF $tmp-inBOMCR

# BOM付きCRLF
${com} 1 2 4 $tmp-inBOMCRLF > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST21-1 error"

# BOM付きCR
${com} 1 2 4 $tmp-inBOMCR > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST21-2 error"

# pipe接続

# BOM付きCRLF
cat $tmp-inBOMCRLF | ${com} 1 2 4 - > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST21-3 error"

# BOM付きCR
cat $tmp-inBOMCR | ${com} 1 2 4 - > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST21-4 error"

###########################################
#TEST22
# TEST3を原型とする

cat << FIN > $tmp-in
0000000 浜地______ 50 F 91 59 20 76 54
0000001 鈴田______ 50 F 46 39 8  5  21
0000003 江頭______ 26 F 30 50 71 36 30
0000004 白土______ 40 M 58 71 20 10 6
0000005 崎村______ 50 F 82 79 16 21 80
FIN

cat << FIN > $tmp-ans
50 浜地 000
50 鈴田 001
26 江頭 003
40 白土 004
50 崎村 005
FIN

# コマンドの説明
# フィールド指定の「NF-6@NF-6@NF-7.1.4 NF-8.5.3@3@1.5.3」はNF=9なので「3と3と2.1.4と1.5.3と3と1.5.3」となり
# 重複を解消して整理すると「3と2.1.4と1.5.3」となる

${com} NF-6@NF-6@NF-7.1.4 NF-8.5.3@3@1.5.3 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST22 error"

###########################################
#TEST23
# フィールド指定の0は全フィールドとなる

cat << FIN > $tmp-in
0000000 浜地______ 50 F 91 59 20 76 54
0000001 鈴田______ 50 F 46 39 8  5  21
0000003 江頭______ 26 F 30 50 71 36 30
0000004 白土______ 40 M 58 71 20 10 6
0000005 崎村______ 50 F 82 79 16 21 80
FIN

cat << FIN > $tmp-ans
0000000 浜地______ 50 F 91 59 20 76 54
0000001 鈴田______ 50 F 46 39 8 5 21
0000003 江頭______ 26 F 30 50 71 36 30
0000004 白土______ 40 M 58 71 20 10 6
0000005 崎村______ 50 F 82 79 16 21 80
FIN

cat << FIN > $tmp-ans2
0000000 浜地______ 50 F 91 59 20 76 54 0000000 浜地______
0000001 鈴田______ 50 F 46 39 8 5 21 0000001 鈴田______
0000003 江頭______ 26 F 30 50 71 36 30 0000003 江頭______
0000004 白土______ 40 M 58 71 20 10 6 0000004 白土______
0000005 崎村______ 50 F 82 79 16 21 80 0000005 崎村______
FIN

cat << FIN > $tmp-ans3
浜地______ 0000000 0000000 浜地______ 50 F 91 59 20 76 54
鈴田______ 0000001 0000001 鈴田______ 50 F 46 39 8 5 21
江頭______ 0000003 0000003 江頭______ 26 F 30 50 71 36 30
白土______ 0000004 0000004 白土______ 40 M 58 71 20 10 6
崎村______ 0000005 0000005 崎村______ 50 F 82 79 16 21 80
FIN

${com} 0 $tmp-in > $tmp-out
diff $tmp-ans $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST23-1 error"

${com} 0 1 2 $tmp-in > $tmp-out
diff $tmp-ans2 $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST23-2 error"

${com} 2 1 0 $tmp-in > $tmp-out
diff $tmp-ans3 $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST23-3 error"

cat << FIN > $tmp-in
0099 浜地______ 50xx 91yy 59zz
0188 鈴田______ 50xx 46yy 39zz
0377 江頭______ 26xx 30yy 50zz
0466 白土______ 40xx 58yy 71zz
0555 崎村______ 50xx 82yy 79zz
FIN

cat << FIN > $tmp-ans4
浜地______ 0099 00 浜 50 91 59
鈴田______ 0188 01 鈴 50 46 39
江頭______ 0377 03 江 26 30 50
白土______ 0466 04 白 40 58 71
崎村______ 0555 05 崎 50 82 79
FIN

${com} 2 1 0.1.2 $tmp-in > $tmp-out
diff $tmp-ans4 $tmp-out
[ $? -eq 0 ] ; ERROR_CHECK "TEST23-4 error"

###########################################
rm -f $tmp-*
echo "${pythonversion} ${name}" OK
exit 0

