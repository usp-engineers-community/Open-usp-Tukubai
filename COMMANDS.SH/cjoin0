#! /bin/sh

# designed by Nobuaki Tounaka
# written by 321516

# print the usage and exit
print_usage_and_exit () {
	cat <<____USAGE 1>&2
Usage   : ${0##*/} [+ng[<fd>]] key=<n> <master> <tran>
Version : Thu Dec 25 01:02:01 JST 2012
        : Open usp Tukubai (POSIX.1 Bourne Shell/POSIX.1 commands)
____USAGE
	exit 1
}


# initialize
ng=''
key_1=''
key_2=''
masterfile=''
tranfile=''


# validate the arguments
for arg in "$@"; do
	case "$arg" in
		key=*)
			key=${arg#key=}
			key_1=''
			key_2=''
			if echo "_$key" | grep '^_[0-9]\{1,\}$' > /dev/null; then
				s=$(echo $key | sed 's/^0\{1,\}//')
				[ -z "$s" ] && print_usage_and_exit
				key_1=$s
				key_2=$s
				continue
			elif echo "_$key" | grep '^_[0-9]\{1,\}/[0-9]\{1,\}$' > /dev/null; then
				s=$(echo ${key%/*} | sed 's/^0\{1,\}//')
				[ -z "$s" ] && print_usage_and_exit
				s1=$(echo ${key#*/} | sed 's/^0\{1,\}//')
				[ -z "$s1" ] && print_usage_and_exit
				if [ $s -le $s1 ]; then
					key_1=$s
					key_2=$s1
				else
					key_1=$s1
					key_2=$s
				fi
				continue
			elif echo "_$key" | grep '^_[0-9][0-9@]\+[0-9]$' > /dev/null; then
				echo $arg | grep '@@' > /dev/null && print_usage_and_exit
				s=$(echo "${key}_" | tr '@' '\n' | sed 's/^0\{1,\}//')
				echo "$s" | grep '^_*$' > /dev/null && print_usage_and_exit
				s1=$(echo "${s%_}" | sort -k 1n,1)
				s2=$(echo "$s1" | uniq)
				[ "_$s1" != "_$s2" ] && print_usage_and_exit
				key_1=$(echo "${s%_}" | tr '\n' '@' | sed 's/@$//')
				key_2=''
				continue
			fi
			print_usage_and_exit
			;;
		+ng*)
			ng=${arg#+ng}
			if [ -z "$ng" ]; then
				ng=2
			elif echo "_$ng" | grep '^_[0-9]\{1,\}$' > /dev/null; then
				:
			else
				print_usage_and_exit
			fi
			;;
		*)
			if [ -z "$masterfile" ]; then
				if [ \( -f "$arg" \) -o \( -c "$arg" \) -o \( "_$arg" = '_-' \) ]; then
					masterfile=$arg
				fi
			elif [ -z "$tranfile" ]; then
				if [ \( -f "$arg" \) -o \( -c "$arg" \) -o \( "_$arg" = '_-' \) ]; then
					tranfile=$arg
				fi
			else
				print_usage_and_exit
			fi
			;;
	esac
done
if [ -z "$key_1" ]; then
	print_usage_and_exit
fi
if [ -z "$masterfile" ]; then
	print_usage_and_exit
fi
if [ -z "$tranfile" ]; then
	tranfile='-'
fi
use_stdin=0
for file in "$masterfile" "$tranfile"; do
	if [ \( "_$file" = '_-'               \) -o \
	     \( "_$file" = '_/dev/stdin'      \) -o \
	     \( "_$file" = '_/dev/fd/0'       \) -o \
	     \( "_$file" = '_/proc/self/fd/0' \)    ]
	then
		use_stdin=$((use_stdin+1))
	fi
done
if [ $use_stdin -gt 1 ]; then
	print_usage_and_exit
fi
if [ \( ! -r "$masterfile" \) -a \( "_$masterfile" != '_-' \) ]; then
	echo "${0##*/}: Cannot open the master file" 1>&2
	exit 1
fi
if [ \( ! -r "$tranfile" \) -a \( "_$tranfile" != '_-' \) ]; then
	echo "${0##*/}: Cannot open the transaction file" 1>&2
	exit 1
fi


# join
exec awk -v key_1=$key_1 -v key_2=$key_2 -v ng=$ng \
'
	# prepare
	BEGIN {
		fd = (ng != "") ? "/dev/fd/"ng : "";
		if (key_1 == key_2) {
			keytype = 1;
			keynum_min = key_1;
		} else if (key_2 != "") {
			keytype = 2;
			keynum_min = key_1;
		} else {
			keytype = 3;
			split(key_1, keynum, "@");
			keynum_min = keynum[1];
			for (i = 2; i <= length(keynum); i++) {
				keynum_min = (keynum[i] < keynum_min) ? keynum[i] : keynum_min;
			}
		}
	}

	# print the records in tran which have the same key
	FNR < NR {
		if (keytype == 1) {
			str = "_" $key_1;
		} else if (keytype == 2) {
			str = "_";
			for (i = key_1; i <= key_2; i++) {
				str = str $i;
			}
		} else if (keytype == 3) {
			str = "_";
			for (i = 1; i <= length(keynum); i++) {
				str = str $keynum[i];
			}
		} else {
			str = "_";
		}
		if (str in masterkey) {
			print;
		} else if (fd != "") {
			print > fd;
		}
		next;
	}

	# load the keys in master
	{
		if (keytype == 1) {
			str = "_" $1;
		} else if (keytype == 2) {
			str = "_";
			for (i = 1; i <= (key_2 - key_1 + 1); i++) {
				str = str $i;
			}
		} else if (keytype == 3) {
			str = "_";
			for (i = 1; i <= length(keynum); i++) {
				j = keynum[i] - keynum_min + 1;
				str = str $j;
			}
		} else {
			str = "_";
		}
		masterkey[str] = 1;
	}
' "$masterfile" "$tranfile"
