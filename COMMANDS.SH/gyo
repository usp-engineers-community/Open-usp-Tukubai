#! /bin/sh

# designed by Nobuaki Tounaka
# written by 321516

# print the usage and exit
print_usage_and_exit () {
	cat <<____USAGE 1>&2
Usage   : ${0##*/} [-f] <file> ...
Version : Thu Oct 18 22:00:00 JST 2012
        : Open usp Tukubai (POSIX.1 Bourne Shell/POSIX.1 commands)
____USAGE
	exit 1
}


# function for processing a file
proc_a_file () {
	local gyo tmpfile reffile 

	# count lines (not adjusted yet)
	if [ $2 -eq 0 ]; then
		gyo=$(wc -l "$1" | awk '{print $1}')
		reffile=$1
	else
		tmpfile=$(mktemp -t "${name_of_me}.XXXXXXXX")
		if [ $? -eq 0 ]; then
			trap "rm -f $tmpfile; exit" 0 1 2 3 11 14 15
		else
			echo "${name_of_me}: Cannot create a temporary file" 1>&2
			exit 1
		fi
		gyo=$(tee "$tmpfile" | wc -l | awk '{print $1}')
		reffile=$tmpfile
	fi
	#
	# adjust the number of lines
	if [ $(tail -n 1 "$reffile" | wc -l | awk '{print $1}') -eq 0 ]; then
		if [ -s "$reffile" ]; then
			gyo=$((gyo+1))
		fi
	fi
	if [ -n "$tmpfile" ]; then
		rm -f "$tmpfile"
		trap  0 1 2 3 11 14 15
		tmpfile=''
	fi
	#
	# print the number of lines
	if [ $foption -eq 0 ]; then
		echo $gyo
	else
		echo "_$1 $gyo" | sed 's/^_//'
	fi
}


# initialize
foption=0
file=''
use_stdin=0
name_of_me=${0##*/}

# parse arguments and count lines
i=0
for arg in "$@"; do
	i=$((i+1))
	is_stdin=0
	#
	# parse argument
	if [ \( $i -eq 1 \) -a \( "_$arg" = '_-f' \) ]; then
		foption=1
		continue
	elif [ \( "_$arg" = '_-'               \) -o \
	       \( "_$arg" = '_/dev/stdin'      \) -o \
	       \( "_$arg" = '_/dev/fd/0'       \) -o \
	       \( "_$arg" = '_/proc/self/fd/0' \)    ]
	then
		[ $use_stdin -eq 0 ] || print_usage_and_exit
		is_stdin=1
		file="$arg"
	elif [ \( -f "$arg" \) -o \( -c "$arg" \) ]; then
		file="$arg"
	else
		print_usage_and_exit
	fi
	if [ \( ! -r "$file" \) -a \( "_$file" != '_-' \) ]; then
		echo "${0##*/}: Cannot open the file \"$arg\"" 1>&2
		exit 1
	fi
	use_stdin=$((use_stdin+is_stdin))
	#
	# process a file
	proc_a_file "$file" $is_stdin
done

# process the stdin stream at this point when no filename was given
if [ -z "$file" ]; then
	proc_a_file '-' 1
fi
